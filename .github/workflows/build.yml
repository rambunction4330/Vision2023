name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    
    - name: Install Dependencies
      run: sudo apt update && sudo apt install libopencv-dev xorg-dev
    
    - name: Install Wpilib
      run: |
        cd ..
        mkdir wpilib-build
        cd wpilib-build
        gh release download --archive=zip -O wpilib-source.zip
        unzip wpilib-source.zip
        rm -rf wpilib-source.zip
        cd $(ls)
        mkdir build
        cd build
        cmake .. -GNinja -DWITH_JAVA=OFF \ 
                         -DWITH_WPILIB=OFF \
                         -DWITH_EXAMPLES=OFF \
                         -DWITH_WPIMATH=OFF \
                         -DWITH_GUI=OFF \
                         -DWITH_SIMULATION_MODULES=OFF \
                        -GNinja
        
        ninja
        ninja install

        

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
